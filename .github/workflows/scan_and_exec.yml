name: scan-and-exec

on:
  schedule:
    - cron: "*/10 * * * *"     # every 10 min to avoid overlap
  workflow_dispatch:

permissions:
  contents: write

# let a run finish; never cancel it because a new one queued
concurrency:
  group: scan-and-exec-${{ github.ref }}
  cancel-in-progress: false

env:
  PYTHONUNBUFFERED: "1"

jobs:
  run:
    runs-on: [self-hosted]     # your Hetzner runner
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests python-binance jq

      # ------- ANALYSES -------
      - name: Ensure output dirs
        run: mkdir -p public_runs/latest

      - name: Run analyses (deep, USDC)
        env:
          VOL_Z_MIN_BREAK: "1.3"
          BREAK_BUFFER_ATR: "0.04"
          RELAX_B_HIGH: "1"
        run: |
          python -m scripts.analyses --mode deep
          test -s public_runs/latest/summary.json
          jq .signals public_runs/latest/summary.json || true

      - name: Commit public_runs
        run: |
          git config --global safe.directory "$GITHUB_WORKSPACE"
          git config user.name  "bincrypare-bot"
          git config user.email "bot@users.noreply.github.com"
          git fetch origin main
          git pull --rebase origin main || true
          git add public_runs
          git diff --cached --quiet || git commit -m "scan: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push origin HEAD:main || true

      # ------- EXECUTOR -------
      - name: Run exec bot on fresh local summary
        env:
          BINANCE_API_KEY: ${{ secrets.BINANCE_API_KEY }}
          BINANCE_API_SECRET: ${{ secrets.BINANCE_API_SECRET }}
          DRY_RUN: "0"
          FORCE_EQUITY_USD: "0"
          QUOTE_ASSET: "USDC"
          TRADE_CANDIDATES: "1"
          C_RISK_MULT: "0.5"
          STOP_LIMIT_OFFSET: "0.001"
          SUMMARY_URL: "file://${{ github.workspace }}/public_runs/latest/summary.json"
        run: python exec_bot.py

      - name: Persist state
        run: |
          git config --global safe.directory "$GITHUB_WORKSPACE"
          git config user.name  "bincrypare-bot"
          git config user.email "bot@users.noreply.github.com"
          git fetch origin main
          git pull --rebase origin main || true
          if [ -f state/open_positions.json ]; then
            git add state/open_positions.json
            git diff --cached --quiet || git commit -m "state: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push origin HEAD:main || true
          else
            echo "No state file to persist."
          fi