name: Run mapping & analyses

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      EQUITY: ${{ vars.EQUITY || '41000' }}
      CASH: ${{ vars.CASH || '32000' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests python-dateutil

      - name: Generate mapping (safe)
        run: |
          set -e
          if [ -f scripts/mapping.py ]; then
            python scripts/mapping.py
          else
            echo "No mapping.py found; skipping mapping generation."
          fi
          echo "âœ… Mapping ensured or skipped."

      - name: Run analyses
        run: |
          set -e
          python -m scripts.analyses

      - name: Publish artifacts into public_runs
        run: |
          set -e
          mkdir -p public_runs/latest
          ts="$(date -u +'%Y-%m-%dT%H-%M-%SZ')"
          mkdir -p "public_runs/$ts"

          cp artifacts/market_snapshot.json public_runs/latest/market_snapshot.json || true
          cp data/signals.json              public_runs/latest/signals.json || true
          cp artifacts/run_stats.json       public_runs/latest/run_stats.json || true
          cp artifacts/debug_scan.json      public_runs/latest/debug_scan.json || true

          cp -r public_runs/latest/* "public_runs/$ts/"

      - name: Build summary.json
        run: |
          set -e
          python - << 'PY'
import json, os, time
def load(p):
    try:
        with open(p) as f: return json.load(f)
    except Exception:
        return {}
snap  = load("artifacts/market_snapshot.json")
sigs  = load("data/signals.json")
stats = load("artifacts/run_stats.json")
out = {
  "generated_at_utc": time.strftime("%Y-%m-%dT%H-%M-%SZ", time.gmtime()),
  "regime": snap.get("regime"),
  "equity": snap.get("equity"),
  "cash": snap.get("cash"),
  "candidates": snap.get("candidates", []),
  "signals": sigs,
  "run_stats": stats,
}
os.makedirs("public_runs/latest", exist_ok=True)
with open("public_runs/latest/summary.json","w") as f: json.dump(out,f,indent=2)
PY

      - name: Commit changes to main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add -A data artifacts public_runs

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "ci: update analyses outputs [skip ci]"
            git push
          fi

      - name: Publish to gh-pages
        run: |
          set -e
          rm -rf /tmp/ghp && mkdir -p /tmp/ghp
          cp -r public_runs /tmp/ghp/
          git fetch origin gh-pages || true
          git switch -C gh-pages
          rm -rf *
          cp -r /tmp/ghp/public_runs/* .
          touch .nojekyll
          git add .
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if git diff --cached --quiet; then
            echo "No changes to publish."
          else
            git commit -m "publish runs $(date -u +'%F %T')"
            git push -u origin gh-pages
          fi