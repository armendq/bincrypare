name: Run mapping & analyses (publish to Pages only)

on:
  push:
    branches: ["main"]
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

concurrency:
  group: publish-to-pages
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests python-dateutil

      - name: Generate mapping (safe)
        run: |
          if [ -f scripts/mapping.py ]; then
            python scripts/mapping.py
          else
            echo "No mapping.py found; skipping."
          fi

      - name: Run analyses
        env:
          EQUITY: ${{ vars.EQUITY || '41964' }}
          CASH: ${{ vars.CASH || '0' }}
          EQUITY_FLOOR: ${{ vars.EQUITY_FLOOR || '40000' }}
        run: python -m scripts.analyses

      - name: Verify outputs exist
        run: |
          set -e
          test -f artifacts/market_snapshot.json
          test -f data/signals.json
          test -f artifacts/run_stats.json
          test -f artifacts/debug_scan.json

      - name: Prepare public_runs (latest only)
        run: |
          set -e
          rm -rf public_runs
          mkdir -p public_runs/latest
          cp artifacts/market_snapshot.json public_runs/latest/summary.json
          cp data/signals.json            public_runs/latest/signals.json
          cp artifacts/run_stats.json     public_runs/latest/run_stats.json
          cp artifacts/debug_scan.json    public_runs/latest/debug_scan.json
          # add a small meta file to ensure fresh content every run
          date -u +"%Y-%m-%dT%H:%M:%SZ" > public_runs/latest/build_utc.txt

      - name: Deploy to gh-pages (Pages only)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: public_runs
          force_orphan: true

      - name: Verify Pages endpoint
        run: |
          set -e
          url="https://armendq.github.io/revolut_crypto_mapping/latest/summary.json?ts=$(date +%s)"
          echo "Checking $url"
          code=$(curl -s -o /dev/null -w "%{http_code}" "$url")
          echo "HTTP $code"
          test "$code" = "200"
