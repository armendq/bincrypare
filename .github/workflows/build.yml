name: Run mapping & analyses

on:
  push:
    branches: ["main"]
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

concurrency:
  group: publish-public-runs
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests python-dateutil

      - name: Generate mapping (safe)
        run: |
          if [ -f scripts/mapping.py ]; then
            python scripts/mapping.py
          else
            echo "No mapping.py found; skipping mapping generation."
          fi

      - name: Run analyses
        env:
          EQUITY: ${{ vars.EQUITY || '41964' }}
          CASH: ${{ vars.CASH || '0' }}
          EQUITY_FLOOR: ${{ vars.EQUITY_FLOOR || '40000' }}
        run: python -m scripts.analyses

      - name: Verify outputs exist
        run: |
          test -f artifacts/market_snapshot.json
          test -f data/signals.json
          test -f artifacts/run_stats.json
          test -f artifacts/debug_scan.json
          ls -l artifacts || true
          ls -l data || true

      - name: Prepare public_runs/latest
        run: |
          mkdir -p public_runs/latest
          cp artifacts/market_snapshot.json public_runs/latest/summary.json

          python scripts/prepare_signals.py

          cp artifacts/run_stats.json  public_runs/latest/run_stats.json
          cp artifacts/debug_scan.json public_runs/latest/debug_scan.json

          ts="$(date -u +'%Y-%m-%dT%H-%M-%SZ')"
          mkdir -p "public_runs/$ts"
          cp public_runs/latest/* "public_runs/$ts/"

          # Keep only newest timestamped folder
          ls -1dt public_runs/20* 2>/dev/null | tail -n +2 | xargs -r rm -rf

      - name: Commit changes to main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git pull --rebase origin main || true
          git add -A data artifacts public_runs || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "ci: publish signals & summary $(date -u +'%Y-%m-%dT%H:%M:%SZ') [skip ci]" || true
            git push origin HEAD:main || true
          fi

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: public_runs
          force_orphan: true