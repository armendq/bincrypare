name: analyses

on:
  workflow_dispatch:
    inputs:
      run_type:
        description: "Override mode: deep | light-fast | light-hourly"
        required: false
        default: ""
  schedule:
    # Deep scan every 15 minutes
    - cron: "*/15 * * * *"
    # Fast light scan every 5 minutes
    - cron: "*/5 * * * *"
    # Hourly light scan at minute 2 to avoid collisions
    - cron: "2 * * * *"

permissions:
  contents: read

concurrency:
  group: analyses-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests pandas numpy ta python-dateutil pytz
          fi

      - name: Decide run mode (deep / light-fast / light-hourly)
        id: decide
        shell: bash
        run: |
          # Priority: manual override -> time-based routing
          MODE="${{ github.event.inputs.run_type }}"
          if [ -n "$MODE" ]; then
            echo "mode=$MODE" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          MINUTE=$(date +%M)
          # Deep scan wins on 0/15/30/45 to avoid duplicate work
          if [ $((10#$MINUTE % 15)) -eq 0 ]; then
            echo "mode=deep" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Hourly light at :02 only (no collision with */5)
          if [ "$MINUTE" = "02" ]; then
            echo "mode=light-hourly" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Otherwise, if we’re on a */5 minute mark, do light-fast
          if [ $((10#$MINUTE % 5)) -eq 0 ]; then
            echo "mode=light-fast" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Fallback (shouldn’t normally happen): no-op
          echo "mode=skip" >> "$GITHUB_OUTPUT"

      - name: Skip if no matching cadence
        if: steps.decide.outputs.mode == 'skip'
        run: echo "No matching cadence for this trigger; exiting."

      - name: Run analyses (deep)
        if: steps.decide.outputs.mode == 'deep'
        run: |
          echo "Running DEEP scan…"
          python analyses.py --save --publish

      - name: Run analyses (light-fast, every 5m)
        if: steps.decide.outputs.mode == 'light-fast'
        run: |
          echo "Running LIGHT-FAST scan…"
          python analyses.py --light --quick --save --publish

      - name: Run analyses (light-hourly at :02)
        if: steps.decide.outputs.mode == 'light-hourly'
        run: |
          echo "Running LIGHT-HOURLY scan…"
          python analyses.py --light --save --publish
