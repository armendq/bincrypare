name: Run mapping & analyses

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests python-dateutil

      - name: Generate mapping (safe)
        run: |
          if [ -f scripts/mapping.py ]; then
            python scripts/mapping.py
          else
            echo "No mapping.py found, skipping."
          fi

      - name: Run analyses
        env:
          EQUITY: ${{ vars.EQUITY || '41000' }}
          CASH:   ${{ vars.CASH   || '32000' }}
        run: python -m scripts.analyses

      - name: Verify outputs exist
        run: |
          test -f public_runs/latest/summary.json
          echo "summary.json present."

      - name: Clean old public_runs folders (keep latest)
        run: |
          mkdir -p public_runs/latest
          find public_runs -mindepth 1 -maxdepth 1 -type d ! -name latest -exec rm -rf {} +
          echo "Kept only public_runs/latest."

      - name: Commit changes to main (conflict-safe)
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add -A data artifacts public_runs || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          # Try commit, rebase on remote if needed, then push (retry up to 3x)
          tries=0
          while [ $tries -lt 3 ]; do
            if ! git rev-parse --verify origin/main >/dev/null 2>&1; then
              git fetch origin main
            fi
            # Rebase on top of remote to avoid non-fast-forward
            git fetch origin main
            git rebase origin/main || { echo "Rebase failed, aborting and retrying…" ; git rebase --abort || true ; sleep 2 ; tries=$((tries+1)) ; continue ; }

            # If we got here, rebase succeeded; ensure commit exists (may have been rewritten)
            if git diff --cached --quiet; then
              echo "Nothing staged after rebase (already up to date)."
            else
              git commit -m "ci: update analyses outputs [skip ci]"
            fi

            # Push with lease to avoid clobbering fresh changes
            if git push --force-with-lease; then
              echo "Pushed successfully."
              exit 0
            fi
            echo "Push failed; retrying…"
            tries=$((tries+1))
            sleep 2
          done

          echo "❌ Failed to push after retries."
          exit 1

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: public_runs
          force_orphan: true

      - name: Verify Pages endpoint
        run: |
          url="https://armendq.github.io/revolut_crypto_mapping/latest/summary.json"
          echo "Checking $url"
          for i in {1..10}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$url")
            echo "Attempt $i: HTTP $code"
            if [ "$code" = "200" ]; then
              echo "✅ summary.json is live"
              exit 0
            fi
            sleep 20
          done
          echo "❌ Failed to verify Pages endpoint"
          exit 1