name: Run mapping & analyses (publish to Pages)

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "*/15 * * * *"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests python-dateutil

      - name: Generate mapping (safe)
        run: |
          if [ -f scripts/mapping.py ]; then
            python scripts/mapping.py
          else
            echo "No mapping.py found; skipping."
          fi

      - name: Run analyses
        env:
          EQUITY: ${{ vars.EQUITY || '41000' }}
          CASH:   ${{ vars.CASH   || '32000' }}
        run: python -m scripts.analyses

      - name: Verify outputs exist
        run: |
          test -f artifacts/market_snapshot.json
          test -f artifacts/run_stats.json
          test -f artifacts/debug_scan.json
          test -f data/signals.json

      - name: Prepare public_runs/latest
        run: |
          rm -rf public_runs/latest
          mkdir -p public_runs/latest
          cp artifacts/market_snapshot.json public_runs/latest/market_snapshot.json
          cp artifacts/run_stats.json       public_runs/latest/run_stats.json
          cp artifacts/debug_scan.json      public_runs/latest/debug_scan.json
          cp data/signals.json              public_runs/latest/signals.json

          python - <<'EOF'
import json, datetime, pathlib
latest = pathlib.Path("public_runs/latest")
market = json.load(open("artifacts/market_snapshot.json", encoding="utf-8"))
run    = json.load(open("artifacts/run_stats.json", encoding="utf-8"))
sig    = json.load(open("data/signals.json", encoding="utf-8"))
out = {
  "generated_at_utc": datetime.datetime.utcnow().replace(microsecond=0).isoformat() + "Z",
  "regime": market.get("regime", {}),
  "equity": market.get("equity"),
  "cash": market.get("cash"),
  "candidates": market.get("candidates", []),
  "signals": sig,
  "run_stats": run,
}
(latest / "summary.json").write_text(json.dumps(out, indent=2), encoding="utf-8")
EOF

      - name: Commit changes to main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A public_runs artifacts data
          git fetch origin main
          git rebase origin/main || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "ci: update analyses outputs [skip ci]"
            git push
          fi

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: public_runs
          force_orphan: true

      - name: Verify Pages endpoint
        run: |
          url="https://armendq.github.io/revolut_crypto_mapping/public_runs/latest/summary.json?ts=$(date +%s)"
          echo "Checking $url"
          code=$(curl -s -o /dev/null -w "%{http_code}" "$url")
          echo "HTTP $code"
          test "$code" = "200"