# .github/workflows/build.yaml
name: run

on:
  workflow_dispatch:
  schedule:
    # Deep scans twice per hour (UTC)
    - cron: "0,30 * * * *"
    # Light-hourly once per hour (UTC)
    - cron: "2 * * * *"

permissions:
  contents: write        # commit public_runs
  pages: write           # deploy to GH Pages
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PYTHONUNBUFFERED: "1"
      PAGES_URL: ${{ vars.PAGES_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Ensure output tree
        run: |
          mkdir -p public_runs/latest
          echo "Tree OK"

      - name: Generate Revolut â†” Binance mapping
        run: |
          set -e
          # Use your existing script. Keep this call exactly as your repo expects.
          # If your repo uses a different entrypoint, replace the line below.
          python scripts/mapping.py

      # ------- ROUTER (light-fast removed) -------
      - name: Decide run mode (deep / light-hourly)
        id: router
        shell: bash
        run: |
          set -euo pipefail
          # GitHub sets the cron that triggered this run in github.event.schedule (for scheduled runs).
          # Fall back to current UTC minute for manual dispatch.
          MINUTE_UTC="$(date -u +%M)"
          if [ -n "${{ github.event.schedule }}" ]; then
            # Pull minute from the cron string, if present.
            CRON="${{ github.event.schedule }}"
            # Simple detection: if cron contains ' 2 ' we consider it LIGHT-HOURLY, else DEEP.
            if echo "$CRON" | grep -qE '(^| )2( |$)'; then MODE="light-hourly"; else MODE="deep"; fi
          else
            # Manual dispatch route by UTC minute: near :02 -> light-hourly, else deep
            if [ "$MINUTE_UTC" = "02" ]; then MODE="light-hourly"; else MODE="deep"; fi
          fi
          echo "mode=$MODE" >> "$GITHUB_OUTPUT"
          echo "Selected mode: $MODE (UTC minute=${MINUTE_UTC})"

      - name: Run analyses (deep)
        if: steps.router.outputs.mode == 'deep'
        run: |
          echo "[router] Running DEEP analyses"
          python scripts/analyses.py deep

      - name: Run analyses (light-hourly at :02)
        if: steps.router.outputs.mode == 'light-hourly'
        run: |
          echo "[router] Running LIGHT-HOURLY analyses"
          python scripts/analyses.py light-hourly

      - name: Commit public_runs to main
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add public_runs || true
          if ! git diff --cached --quiet; then
            git commit -m "Update public_runs ($(date -u +'%Y-%m-%d %H:%M:%S') UTC)"
            git push
          else
            echo "No changes to commit."
          fi

      # -------- GitHub Pages publish --------
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public_runs

      - name: Deploy to gh-pages
        uses: actions/deploy-pages@v4

      - name: Verify Pages endpoint (non-blocking)
        continue-on-error: true
        run: |
          URL="${PAGES_URL:-https://$GITHUB_REPOSITORY_OWNER.github.io/${GITHUB_REPOSITORY#*/}/}"
          echo "Checking $URL"
          curl -sSL -I "$URL" || true