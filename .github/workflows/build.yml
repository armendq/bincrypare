name: Run mapping & analyses

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests python-dateutil

      - name: Generate mapping (safe)
        run: |
          set -e
          if [ -f scripts/mapping.py ]; then
            python scripts/mapping.py
          else
            echo "No mapping.py found; skipping mapping generation."
          fi
          echo "âœ… Ensured mapping files exist (or skipped)."

      - name: Run analyses
        env:
          EQUITY: ${{ vars.EQUITY || '41000' }}
          CASH:   ${{ vars.CASH   || '32000' }}
        run: |
          set -e
          python -m scripts.analyses

      - name: Publish artifacts into public_runs
        run: |
          set -e
          mkdir -p public_runs/latest
          ts="$(date -u +'%Y-%m-%dT%H-%M-%SZ')"
          mkdir -p "public_runs/$ts"

          cp artifacts/market_snapshot.json public_runs/latest/market_snapshot.json || true
          cp data/signals.json              public_runs/latest/signals.json || true
          cp artifacts/run_stats.json       public_runs/latest/run_stats.json || true
          cp artifacts/debug_scan.json      public_runs/latest/debug_scan.json || true

          cp -r public_runs/latest/* "public_runs/$ts/"

      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          echo "=== Status before staging ==="
          git status --porcelain

          git add -A data artifacts public_runs

          echo "=== Status after staging ==="
          git status --porcelain

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "ci: update analyses outputs [skip ci]"
            git push
          fi