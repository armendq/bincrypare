name: build

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "*/15 * * * *"   # every 15 minutes
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests pandas numpy python-dateutil pytz rapidfuzz
          fi

      - name: Ensure output tree
        run: |
          set -e
          mkdir -p public_runs/latest
          mkdir -p data

      - name: Generate Revolut â†” Binance mapping
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          set -e
          python scripts/generate_mapping.py
          test -f data/revolut_mapping.json

      - name: Run analyses
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          set -e
          python -m scripts.analyses
          test -f public_runs/latest/summary.json

      - name: Commit public_runs to main
        if: github.ref == 'refs/heads/main'
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage outputs (do not error if mapping didn't change)
          git add public_runs data/revolut_mapping.json || true

          # Create commit only when there are changes
          git diff --staged --quiet && echo "no changes to commit" || git commit -m "ci: update analyses outputs [skip ci]"

          # Rebase-pull to avoid push races, then push
          git pull --rebase origin main || true
          git push origin HEAD:main || true

      - name: Deploy to gh-pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public_runs
          publish_branch: gh-pages
          force_orphan: true

      - name: Verify Pages endpoint (non-blocking)
        if: github.ref == 'refs/heads/main'
        run: |
          set -e
          owner="${GITHUB_REPOSITORY_OWNER}"
          repo="${GITHUB_REPOSITORY#*/}"
          url="https://${owner}.github.io/${repo}/latest/summary.json?ts=$(date +%s)"
          echo "Checking ${url}"
          for i in 1 2 3 4; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$url")
            echo "HTTP $code"
            [ "$code" = "200" ] && exit 0
            sleep 5
          done
          echo "Pages may still be propagating; not failing the build."
